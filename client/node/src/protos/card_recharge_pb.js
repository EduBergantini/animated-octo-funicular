// source: card_recharge.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.operations.CardRechargeReply', null, global);
goog.exportSymbol('proto.operations.CardRechargeRequest', null, global);
goog.exportSymbol('proto.operations.DocumentType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.operations.CardRechargeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.operations.CardRechargeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.operations.CardRechargeRequest.displayName = 'proto.operations.CardRechargeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.operations.CardRechargeReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.operations.CardRechargeReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.operations.CardRechargeReply.displayName = 'proto.operations.CardRechargeReply';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.operations.CardRechargeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.operations.CardRechargeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.operations.CardRechargeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.operations.CardRechargeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardInternalSerialNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    issuerId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cardDesignId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    cardSerialNumber: jspb.Message.getFieldWithDefault(msg, 4, 0),
    applicationId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    documentType: jspb.Message.getFieldWithDefault(msg, 6, 0),
    documentNumber: jspb.Message.getFieldWithDefault(msg, 7, ""),
    rechargeValueInCents: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.operations.CardRechargeRequest}
 */
proto.operations.CardRechargeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.operations.CardRechargeRequest;
  return proto.operations.CardRechargeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.operations.CardRechargeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.operations.CardRechargeRequest}
 */
proto.operations.CardRechargeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCardInternalSerialNumber(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIssuerId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardDesignId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCardSerialNumber(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setApplicationId(value);
      break;
    case 6:
      var value = /** @type {!proto.operations.DocumentType} */ (reader.readEnum());
      msg.setDocumentType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentNumber(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRechargeValueInCents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.operations.CardRechargeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.operations.CardRechargeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.operations.CardRechargeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.operations.CardRechargeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getIssuerId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCardDesignId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCardSerialNumber();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getApplicationId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {!proto.operations.DocumentType} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRechargeValueInCents();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional uint64 card_internal_serial_number = 1;
 * @return {number}
 */
proto.operations.CardRechargeRequest.prototype.getCardInternalSerialNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.operations.CardRechargeRequest} returns this
 */
proto.operations.CardRechargeRequest.prototype.setCardInternalSerialNumber = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.operations.CardRechargeRequest} returns this
 */
proto.operations.CardRechargeRequest.prototype.clearCardInternalSerialNumber = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.operations.CardRechargeRequest.prototype.hasCardInternalSerialNumber = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 issuer_id = 2;
 * @return {number}
 */
proto.operations.CardRechargeRequest.prototype.getIssuerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.operations.CardRechargeRequest} returns this
 */
proto.operations.CardRechargeRequest.prototype.setIssuerId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 card_design_id = 3;
 * @return {number}
 */
proto.operations.CardRechargeRequest.prototype.getCardDesignId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.operations.CardRechargeRequest} returns this
 */
proto.operations.CardRechargeRequest.prototype.setCardDesignId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 card_serial_number = 4;
 * @return {number}
 */
proto.operations.CardRechargeRequest.prototype.getCardSerialNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.operations.CardRechargeRequest} returns this
 */
proto.operations.CardRechargeRequest.prototype.setCardSerialNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 application_id = 5;
 * @return {number}
 */
proto.operations.CardRechargeRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.operations.CardRechargeRequest} returns this
 */
proto.operations.CardRechargeRequest.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional DocumentType document_type = 6;
 * @return {!proto.operations.DocumentType}
 */
proto.operations.CardRechargeRequest.prototype.getDocumentType = function() {
  return /** @type {!proto.operations.DocumentType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.operations.DocumentType} value
 * @return {!proto.operations.CardRechargeRequest} returns this
 */
proto.operations.CardRechargeRequest.prototype.setDocumentType = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.operations.CardRechargeRequest} returns this
 */
proto.operations.CardRechargeRequest.prototype.clearDocumentType = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.operations.CardRechargeRequest.prototype.hasDocumentType = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string document_number = 7;
 * @return {string}
 */
proto.operations.CardRechargeRequest.prototype.getDocumentNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.operations.CardRechargeRequest} returns this
 */
proto.operations.CardRechargeRequest.prototype.setDocumentNumber = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.operations.CardRechargeRequest} returns this
 */
proto.operations.CardRechargeRequest.prototype.clearDocumentNumber = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.operations.CardRechargeRequest.prototype.hasDocumentNumber = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 recharge_value_in_cents = 8;
 * @return {number}
 */
proto.operations.CardRechargeRequest.prototype.getRechargeValueInCents = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.operations.CardRechargeRequest} returns this
 */
proto.operations.CardRechargeRequest.prototype.setRechargeValueInCents = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.operations.CardRechargeReply.prototype.toObject = function(opt_includeInstance) {
  return proto.operations.CardRechargeReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.operations.CardRechargeReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.operations.CardRechargeReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    transactionNumber: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.operations.CardRechargeReply}
 */
proto.operations.CardRechargeReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.operations.CardRechargeReply;
  return proto.operations.CardRechargeReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.operations.CardRechargeReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.operations.CardRechargeReply}
 */
proto.operations.CardRechargeReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTransactionNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.operations.CardRechargeReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.operations.CardRechargeReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.operations.CardRechargeReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.operations.CardRechargeReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTransactionNumber();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional int32 status = 1;
 * @return {number}
 */
proto.operations.CardRechargeReply.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.operations.CardRechargeReply} returns this
 */
proto.operations.CardRechargeReply.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.operations.CardRechargeReply.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.operations.CardRechargeReply} returns this
 */
proto.operations.CardRechargeReply.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 transaction_number = 3;
 * @return {number}
 */
proto.operations.CardRechargeReply.prototype.getTransactionNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.operations.CardRechargeReply} returns this
 */
proto.operations.CardRechargeReply.prototype.setTransactionNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.operations.DocumentType = {
  UNKNOWN: 0,
  RG: 1,
  CPF: 2
};

goog.object.extend(exports, proto.operations);
